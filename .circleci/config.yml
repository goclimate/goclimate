# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

commands:
  setupapp:
    steps:
      # https://support.circleci.com/hc/en-us/articles/360004086734-error-while-loading-shared-libraries-libgconf-2-so-4-cannot-open-shared-object-file-No-such-file-or-directory
      - run:
          command: |
            sudo apt-get install libgconf-2-4

      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-bundler-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-bundler-

      - run:
          name: Install Bundler dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-bundler-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
          - v1-yarn-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-yarn-

      - run:
          name: Install Yarn dependencies
          command: |
            bin/yarn install

      - save_cache:
          paths:
            - ./node_modules
          key: v1-yarn-{{ checksum "yarn.lock" }}

  setupcodeclimate:
    steps:
      - run:
          name: Download CodeClimate test reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter

jobs:
  rspec:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: myapp
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: myapp
          POSTGRES_DB: myapp-test
          POSTGRES_PASSWORD: ""

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    steps:
      - setupapp
      - setupcodeclimate

      - run:
          name: Wait for database to become available
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Setup database and build webpack
          command: bin/rake db:create db:schema:load webpack:build

      - run:
          name: Run Rspec
          command: |
            mkdir ~/reports
            bin/rspec --format progress --format RspecJunitFormatter -o ~/reports/rspec.xml

      - store_test_results:
          path: ~/reports

      - run:
          name: Upload coverage report to CodeClimate
          command: ./tmp/cc-test-reporter after-build -t simplecov

      - store_artifacts:
          path: coverage
workflows:
  version: 2
  all:
    jobs:
      - rspec
